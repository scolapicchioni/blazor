@using PhotoSharingApplication.Shared.Entities
@using PhotoSharingApplication.Shared.Interfaces
@inject IPhotosService photosService

@page "/photos/all"

<PageTitle>All Photos</PageTitle>

@if (photos is null)
{
    <p>...Loading...</p>
}
else
{
    @foreach (var photo in photos)
    {
<article>
    <p>@photo.Id</p>
    <p>@photo.Title</p>
    <p>@photo.Description</p>
    <p><img src="@(photo.PhotoFile is null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")" /></p>
    <div>
        <NavLink href="@($"photos/details/{photo.Id}")">Details</NavLink>
        <NavLink href="@($"photos/update/{photo.Id}")">Update</NavLink>
        <NavLink href="@($"photos/delete/{photo.Id}")">Delete</NavLink>
    </div>
</article>
    }
}

@code {
    List<Photo>? photos;

    protected override async Task OnInitializedAsync() {
        photos = await photosService.GetPhotosAsync();
    }
}
