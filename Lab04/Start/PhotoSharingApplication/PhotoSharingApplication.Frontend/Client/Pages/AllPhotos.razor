@page "/photos/all"

@using PhotoSharingApplication.Shared.Entities
@using PhotoSharingApplication.Shared.Interfaces
@inject IPhotosService photosService

<PageTitle>All Photos</PageTitle>

<MudText Typo="Typo.h1">All Photos</MudText>

<MudIconButton Icon="@Icons.Material.Filled.AddAPhoto" Color="Color.Default" Href="photos/upload" />

<MudGrid Spacing="2" Justify="Justify.FlexStart">
    
@if (photos == null) {
    <p>...Loading...</p>
} else {
    @foreach (var photo in photos) {
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">@photo.Id</MudText>
                    <MudText Typo="Typo.body2">@photo.Title</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardMedia Image="@(photo.PhotoFile == null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")" Height="250" />
            <MudCardContent>
                <MudText Typo="Typo.body2">@photo.Description</MudText>
                <MudText Typo="Typo.subtitle1">@photo.CreatedDate.ToShortDateString()</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudIconButton Icon="@Icons.Material.Filled.Photo" Color="Color.Default" Href="@($"photos/details/{photo.Id}")" />
                <MudIconButton Icon="@Icons.Material.Filled.PhotoSizeSelectLarge" Color="Color.Default" Href="@($"photos/update/{photo.Id}")" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Warning" Href="@($"photos/delete/{photo.Id}")" />
            </MudCardActions>
        </MudCard>
    </MudItem>
    }
}
</MudGrid>
@code {
    List<Photo>? photos;

    protected override async Task OnInitializedAsync() {
        photos = await photosService.GetPhotosAsync();
    }
}