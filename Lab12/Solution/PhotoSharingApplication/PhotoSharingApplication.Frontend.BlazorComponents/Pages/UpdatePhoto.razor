@page "/photos/update/{id:int}"

@using PhotoSharingApplication.Shared.Exceptions;
@using PhotoSharingApplication.Shared.Interfaces
@using PhotoSharingApplication.Shared.Entities
@inject IPhotosService photosService
@inject NavigationManager navigationManager

<PageTitle>Update Photo @photo?.Title</PageTitle>

@if (photo is null) {
    <MudText Typo="Typo.caption">...Loading...</MudText>
} else {
    <PhotoEditComponent Photo="photo" OnSave="Upload"></PhotoEditComponent>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Photo? photo;

    protected override async Task OnInitializedAsync() {
        photo = await photosService.FindWithImageAsync(Id);
    }

    private async Task Upload() {
        try {
            await photosService.UpdateAsync(photo!);
            navigationManager.NavigateTo("/photos/all");
        } catch (EditUnauthorizedException<Photo>) {
            navigationManager.NavigateTo("/forbidden");
        }
    }
}