@using PhotoSharingApplication.Shared.Validators;
<MudCard>
    <MudForm Model="originalComment" @ref="@form" Validation="@(commentValidator.ValidateValue)">
        <MudCardContent>
            <MudTextField @bind-Value="originalComment.Subject"
                          For="@(() => originalComment.Subject)"
                          Label="Title" />
            <MudTextField @bind-Value="originalComment.Body"
                          Lines="3"
                          For="@(() => originalComment.Body)"
                          Label="Description" />
            <MudText Typo="Typo.caption" Color="Color.Error">@message</MudText>
        </MudCardContent>
    </MudForm>
    <MudCardActions>
        <MudIconButton Color="Color.Primary" Icon="@Icons.Material.Filled.NavigateBefore" OnClick="@(async ()=> await OnCancel.InvokeAsync(originalComment))">Cancel</MudIconButton>
        <MudIconButton Color="Color.Primary" Icon="@Icons.Material.Filled.Check" OnClick="ValidateAndSubmit">Update</MudIconButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public Comment CommentItem { get; set; } = default!;

    [Parameter]
    public EventCallback<Comment> OnCancel { get; set; }

    [Parameter]
    public EventCallback<Comment> OnSave { get; set; }

    private Comment originalComment = default!;

    private MudForm form;
    private readonly CommentValidator commentValidator = new CommentValidator();

    private string message;

    protected override void OnInitialized() {
        originalComment = new Comment { Id = CommentItem.Id, PhotoId = CommentItem.PhotoId, Subject = CommentItem.Subject, Body = CommentItem.Body, SubmittedOn = CommentItem.SubmittedOn, UserName = CommentItem.UserName };
    }

    private async Task ValidateAndSubmit() {
        await form.Validate();
        if (form.IsValid) {
            try {
                message = string.Empty;
                await OnSave.InvokeAsync(originalComment);
            } catch (FluentValidation.ValidationException ex) {
                message = ex.Message;
            }
        }
    }
}
