@using System.Security.Claims;
@inherits CommentsComponentTestsBase

@code {
    [Fact]
    public void CommentsComponentShouldRenderCreateCommentWhenUserIsAuthorized() {
        //Arrange
        authContext.SetAuthorized("TEST USER", AuthorizationState.Authorized);

        //Act
        var cut = Render(@<CommentsComponent PhotoId=photoId/>);

        //Assert
        //find the create comment button
        IRenderedComponent<CommentComponent>? createCommentButton = cut.FindComponents<CommentComponent>().FirstOrDefault(c => c.Instance.ViewMode == CommentComponent.ViewModes.Create);
        createCommentButton.Should().NotBeNull();
    }

    [Fact]
    public void CommentsComponentShouldNotRenderCreateCommentWhenUserIsUnauthorized() {
        //Arrange
        authContext.SetAuthorized("TEST USER", AuthorizationState.Unauthorized);

        //Act
        var cut = Render(@<CommentsComponent PhotoId=photoId />);

        //Assert
        //find the create comment button
        IRenderedComponent<CommentComponent>? createCommentButton = cut.FindComponents<CommentComponent>().FirstOrDefault(c => c.Instance.ViewMode == CommentComponent.ViewModes.Create);
        createCommentButton.Should().BeNull();
    }
}
