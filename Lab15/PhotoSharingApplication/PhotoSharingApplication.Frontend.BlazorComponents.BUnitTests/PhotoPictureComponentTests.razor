@inherits TestContext
@using PhotoSharingApplication.Shared.Core.Entities
@code {
    [Fact]
    public void ImageUrlOfCardMediaShouldBeSetToImageUrlOfPhoto_WhenIsLocalFalse() {
        var Photo = new PhotoSharingApplication.Shared.Core.Entities.Photo() { ImageUrl = "a/b/1" };
        // Act
        var cut = Render(@<PhotoPictureComponent IsLocal="false" Photo="Photo" />);

        var card = cut.FindComponent<MatBlazor.MatCardMedia>();

        Assert.Equal(Photo.ImageUrl, card.Instance.ImageUrl);
}

[Fact]
public void ImageUrlOfCardMediaShouldBeSetToData_WhenIsLocalTrue() {
    var Photo = new Photo() {
        PhotoImage = new PhotoImage() {
            ImageMimeType = "img/jpg", PhotoFile = new byte[] { 1, 2, 3, 4, 5 }
        }
    };
    string expected = $"data:{Photo.PhotoImage.ImageMimeType};base64,{Convert.ToBase64String(Photo.PhotoImage.PhotoFile)}";

    // Act
    var cut = Render(@<PhotoPictureComponent IsLocal="true" Photo="Photo" />);

    var card = cut.FindComponent<MatBlazor.MatCardMedia>();

    Assert.Equal(expected, card.Instance.ImageUrl);
}

[Fact]
public void ImageUrlOfCardMediaShouldBeSetToEmpty_WhenIsLocalTrue_AndImageIsNull() {
    var Photo = new Photo() {PhotoImage = new PhotoImage() };
    string expected = "";

    // Act
    var cut = Render(@<PhotoPictureComponent IsLocal="true" Photo="Photo" />);

    var card = cut.FindComponent<MatBlazor.MatCardMedia>();

    Assert.Equal(expected, card.Instance.ImageUrl);
}
}
