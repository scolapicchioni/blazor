@page "/photos/all"

@using Microsoft.AspNetCore.Components.Web.Virtualization;
@using PhotoSharingApplication.Shared.Entities
@using PhotoSharingApplication.Shared.Interfaces
@inject IPhotosService photosService

<PageTitle>All Photos</PageTitle>

<MudText Typo="Typo.h1">All Photos</MudText>

<MudIconButton Icon="@Icons.Material.Filled.AddAPhoto" Color="Color.Default" Href="photos/upload" />

<MudGrid Spacing="2" Justify="Justify.FlexStart" class="object-contain overflow-scroll">
<Virtualize @ref="virtualizecomponent" Context="photo" ItemsProvider="@LoadPhotos">
<MudItem xs="12" sm="4">
    <PhotoDetailsComponent @key="photo.Id" Photo="photo" Details Edit Delete />
</MudItem>
</Virtualize>
</MudGrid>
@code {
    Virtualize<Photo> virtualizecomponent = default!;
    int totalNumberOfPhotos;

    protected override async Task OnInitializedAsync() {
        totalNumberOfPhotos = await photosService.GetPhotosCountAsync();
        await virtualizecomponent.RefreshDataAsync();
    }

    private async ValueTask<ItemsProviderResult<Photo>> LoadPhotos(ItemsProviderRequest request) {
        int numberOfPhotos = Math.Min(request.Count, totalNumberOfPhotos - request.StartIndex);
        List<Photo> photos = await photosService.GetPhotosAsync(request.StartIndex, numberOfPhotos, request.CancellationToken);

        return new ItemsProviderResult<Photo>(photos, totalNumberOfPhotos);
    }
}