@inherits CommentsComponentTestsBase
@using PhotoSharingApplication.Frontend.BlazorComponents

<h3>CommentsComponentTests</h3>

@code{
    [Fact]
    public void ShouldNotRenderCommentInCreateMode_WhenNotAuthenticated_NotAuthorized() {
        //unauthenticated and unauthorized
        this.AddTestAuthorization();

        var cut = Render(@<CommentsComponent PhotoId="1"></CommentsComponent>);

        var commentComponents = cut.FindComponents<CommentComponent>();

        Assert.DoesNotContain(commentComponents, c => c.Instance.ViewMode == CommentComponent.ViewModes.Create);
    }

    [Fact]
    public void ShouldNotRenderCommentInCreateMode_WhenAuthenticated_NotAuthorized() {
        //authenticated and unauthorized
        var authContext = this.AddTestAuthorization();
        authContext.SetAuthorized("TEST USER", AuthorizationState.Unauthorized);

        var cut = Render(@<CommentsComponent PhotoId="1"></CommentsComponent>);

        var commentComponents = cut.FindComponents<CommentComponent>();

        Assert.DoesNotContain(commentComponents, c => c.Instance.ViewMode == CommentComponent.ViewModes.Create);
    }

    [Fact]
    public void ShouldRenderCommentInCreateMode_WhenAuthenticated_Authorized() {
        //authenticated and authorized
        var authContext = this.AddTestAuthorization();
        authContext.SetAuthorized("TEST USER", AuthorizationState.Authorized);

        var cut = Render(@<CommentsComponent PhotoId="1"></CommentsComponent>);

        var commentComponents = cut.FindComponents<CommentComponent>();

        Assert.Contains(commentComponents, c => c.Instance.ViewMode == CommentComponent.ViewModes.Create);
    }
}