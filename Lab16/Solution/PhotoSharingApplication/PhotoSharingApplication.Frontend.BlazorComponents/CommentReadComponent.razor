@using PhotoSharingApplication.Shared.Core.Entities

@using PhotoSharingApplication.Shared.Core.Interfaces;

@inject IUserService UserService
@inject IAuthorizationService<Comment> CommentsAuthorizationService

<MatCardContent>
    <em>On @CommentItem.SubmittedOn.ToShortDateString() At @CommentItem.SubmittedOn.ToShortTimeString(), @CommentItem.UserName said:</em>
    <MatH5>@CommentItem.Subject</MatH5>
    <p>@CommentItem.Body</p>
</MatCardContent>
<MatCardActions>
    @if (mayEdit) {
    <MatButton OnClick="RaiseEdit">Edit</MatButton>
    }
    @if (mayDelete) {
    <MatButton OnClick="RaiseDelete">Delete</MatButton>
    }
</MatCardActions>

@code {
    [Parameter]
    public Comment CommentItem { get; set; }

    [Parameter]
    public EventCallback<Comment> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Comment> OnDelete { get; set; }

    async Task RaiseEdit(MouseEventArgs args) => await OnEdit.InvokeAsync(CommentItem);
    async Task RaiseDelete(MouseEventArgs args) => await OnDelete.InvokeAsync(CommentItem);

    bool mayEdit = false;
    bool mayDelete = false;

    protected override async Task OnInitializedAsync() {
        var User = await UserService.GetUserAsync();
        mayEdit = await CommentsAuthorizationService.ItemMayBeUpdatedAsync(User, CommentItem);
        mayDelete = await CommentsAuthorizationService.ItemMayBeDeletedAsync(User, CommentItem);
    }
}
