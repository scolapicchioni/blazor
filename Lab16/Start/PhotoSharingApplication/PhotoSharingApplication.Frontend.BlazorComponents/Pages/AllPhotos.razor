@page "/photos/all"
@using Microsoft.AspNetCore.Components.Web.Virtualization
@inject IPhotosService photosService

<PageTitle>All Photos</PageTitle>

<MatH3>All Photos</MatH3>

<AuthorizeView>
    <Authorized><MatButton Link="photos/upload">Upload new Photo</MatButton></Authorized>
    <NotAuthorized><MatButtonLink Href="bff/login">Log in to upload a photo<MatIcon Icon="@MatIconNames.Account_circle"></MatIcon></MatButtonLink></NotAuthorized>
</AuthorizeView>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <Virtualize @ref="virtualizecomponent" Context="photo" ItemsProvider="@LoadPhotos">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                <PhotoDetailsComponent Photo="photo" Edit Delete Details></PhotoDetailsComponent>
            </div>
        </Virtualize>
    </div>
</div>


@code {
    Virtualize<Photo> virtualizecomponent;
    int totalNumberOfPhotos;
    protected override async Task OnInitializedAsync() {
        totalNumberOfPhotos = await photosService.GetPhotosCountAsync();
        await virtualizecomponent.RefreshDataAsync();
    }

    private async ValueTask<ItemsProviderResult<Photo>> LoadPhotos(ItemsProviderRequest request) {
        var numberOfPhotos = Math.Min(request.Count, totalNumberOfPhotos - request.StartIndex);
        var employees = await photosService.GetPhotosAsync(request.StartIndex,
            numberOfPhotos, request.CancellationToken);

        return new ItemsProviderResult<Photo>(employees, totalNumberOfPhotos);
    }
}
